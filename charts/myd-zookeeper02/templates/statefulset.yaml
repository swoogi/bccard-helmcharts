apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "zookeeper.fullname" . }}
spec:
  selector:
    matchLabels:
      {{- include "zookeeper.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "zookeeper.fullname" . }}-hs
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate 
  podManagementPolicy: OrderedReady 
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zookeeper.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zookeeper.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      #### ZOOKEEPER CONTAINER ####
      - name: {{ .Chart.Name }}
        securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.images.registry }}/{{ .Values.images.zookeeper.name }}:{{ .Values.images.zookeeper.tag }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        ports:
        - containerPort: 2181  
          name: client
        - containerPort: 2888 
          name: server
        - containerPort: 3888 
          name: leader-election
        - containerPort: 7000
          name: metric-provider
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - '[[ "$(echo ruok | nc localhost 2181)" == "imok" ]] || exit 1'
          timeoutSeconds: 2
        startupProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 30
          failureThreshold: 5
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        env:
          - name: K8S_REPLICAS
            value: "{{ .Values.replicaCount }}"
          {{- with .Values.configs.optional }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        volumeMounts:
        - name: {{ include "zookeeper.fullname" . }}-datadir
          mountPath: /data
      #### NODE-EXPORTER CONTAINER ####
      {{- if .Values.configs.nodeExporter }}
      - name: {{ .Chart.Name }}-nodexporter
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.images.registry }}/{{ .Values.images.nodeExporter.name }}:{{ .Values.images.nodeExporter.tag }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        ports:
        - containerPort: {{ .Values.configs.nodeExporter.port }}  
          name: node-exporter
        startupProbe:
          tcpSocket:
            port: {{ .Values.configs.nodeExporter.port }}
        args:
          - --collector.disable-defaults
          - --collector.filesystem
          - --collector.cpu
          - --collector.meminfo
          - --collector.netstat_detail
        volumeMounts:
        - name: {{ include "zookeeper.fullname" . }}-datadir
          mountPath: /data
          readOnly: true
        resources:
          requests:
            cpu: "100m"
            memory: "64Mi"
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # {{- with .Values.affinity }}
      # affinity:
      #   {{- toYaml . | nindent 8 }}
      # {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - {{ include "zookeeper.fullname" . }}
              topologyKey: "kubernetes.io/hostname"
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "zookeeper.fullname" . }}-datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.configs.volume.storageClass }}
      resources:
        requests:
          storage: {{ .Values.configs.volume.storage }}
