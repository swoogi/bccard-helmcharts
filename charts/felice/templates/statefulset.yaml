apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "felice.fullname" . }}
spec:
  selector:
    matchLabels:
      {{- include "felice.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "felice.fullname" . }}-hs
  replicas: 1 
  updateStrategy:
    type: RollingUpdate 
  podManagementPolicy: OrderedReady 
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "felice.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "felice.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostAliases:
        - hostnames:
          - felice-mon
          - felice-board
          - felice-api
          - felice-back
          - felice-front
          # - felice-zoo
          - felice-lag
          ip: "127.0.0.1"
      containers:
      #### felice-mon ####
      - name: {{ .Chart.Name }}-mon
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.images.registry }}/{{ .Values.images.feliceMon.name }}:{{ .Values.images.feliceMon.tag }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        ports:
        - containerPort: 9090
          name: felice-mon
        readinessProbe:
          httpGet:
            port: felice-mon
            path: /-/healthy
          timeoutSeconds: 2
        startupProbe:
          tcpSocket:
            port: felice-mon
          initialDelaySeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        # command:
        args:
          - "--web.enable-lifecycle"
        env:
          - name: PROMETHEUS_STORAGE_TSDB_RETENTION_TIME
            value: 60d
        volumeMounts:
        - name: {{ include "felice.fullname" . }}-monitoring-tsdb
          mountPath: /prometheus
        - name: {{ include "felice.fullname" . }}-rulesdir
          mountPath: /opt/felice/rules
          readOnly: true
        - name: monitoring-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: monitoring-targets
          mountPath: /etc/prometheus/targets
      #### FELICE-BOARD ####
      - name: {{ .Chart.Name }}-board
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.images.registry }}/{{ .Values.images.feliceBoard.name }}:{{ .Values.images.feliceBoard.tag }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        ports:
        - containerPort: 3000
          name: felice-board
        readinessProbe:
          httpGet:
            port: felice-board
            path: /api/health
          timeoutSeconds: 2
        startupProbe:
          tcpSocket:
            port: felice-board
          initialDelaySeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        # env:
      #### FELICE-BACK ####
      - name: {{ .Chart.Name }}-api
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.images.registry }}/{{ .Values.images.feliceApi.name }}:{{ .Values.images.feliceApi.tag }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        ports:
        - containerPort: 8989
          name: felice-api
        readinessProbe:
          httpGet:
            port: 7100
            path: /monitor/health
          timeoutSeconds: 2
        startupProbe:
          tcpSocket:
            port: felice-api
          initialDelaySeconds: 30
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        # env:
        volumeMounts:
        - name: {{ include "felice.fullname" . }}-rulesdir
          mountPath: /felice-api/prom-rules
        - name: {{ include "felice.fullname" . }}-datadir
          mountPath: /felice-api/data
      #### FELICE-FRONT ####
      - name: {{ .Chart.Name }}-front
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.images.registry }}/{{ .Values.images.feliceClient.name }}:{{ .Values.images.feliceClient.tag }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        ports:
        - containerPort: 8080
          name: felice-front
        readinessProbe:
          httpGet:
            port: felice-front
            path: /monitor/health
          timeoutSeconds: 2
        startupProbe:
          tcpSocket:
            port: felice-front
          initialDelaySeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        # env:
      #### FELICE-LAG ####
      - name: {{ .Chart.Name }}-lag
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.images.registry }}/{{ .Values.images.feliceLag.name }}:{{ .Values.images.feliceLag.tag }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        ports:
        - containerPort: 8000
          name: felice-lag
        readinessProbe:
          httpGet:
            port: felice-lag
            path: /burrow/admin/ready
          timeoutSeconds: 2
        startupProbe:
          tcpSocket:
            port: felice-lag
          initialDelaySeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        env:
        # - name: WAIT_HOSTS
        #   value: felice-zoo:2181
        - name: WAIT_BEFORE
          value: "2"
        - name: WAIT_AFTER
          value: "1"
        - name: BURROW_TOML
          valueFrom:
            configMapKeyRef:
              name: {{ include "felice.fullname" . }}-config
              key: burrow.toml       
      volumes:
        - name: monitoring-config
          configMap:
            name: {{ include "felice.fullname" . }}-config
        - name: monitoring-targets
          configMap:
            name: {{ include "felice.fullname" . }}-monitoring-targets
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # {{- with .Values.affinity }}
      # affinity:
      #   {{- toYaml . | nindent 8 }}
      # {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - {{ include "felice.fullname" . }}
              topologyKey: "kubernetes.io/hostname"
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # volumes:
      #   - name: burrow-toml-volume
      #     configMap:
      #       name: {{ include "felice.fullname" . }}-burrow
  volumeClaimTemplates:
  - metadata:
      name: {{ include "felice.fullname" . }}-monitoring-tsdb
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.configs.volumes.tsdb.storageClass }}
      resources:
        requests:
          storage: {{ .Values.configs.volumes.tsdb.storage }}
  - metadata:
      name: {{ include "felice.fullname" . }}-rulesdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.configs.volumes.rulesdir.storageClass }}
      resources:
        requests:
          storage: {{ .Values.configs.volumes.rulesdir.storage }}
  - metadata:
      name: {{ include "felice.fullname" . }}-datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.configs.volumes.datadir.storageClass }}
      resources:
        requests:
          storage: {{ .Values.configs.volumes.datadir.storage }}
  
